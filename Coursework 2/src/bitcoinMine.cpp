#include "bitcoinMine.h"

uint8_t sequence[64] = {0x45,0x6D,0x62,0x65,0x64,0x64,0x65,0x64,0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x73,0x20,0x61,0x72,0x65,0x20,0x66,0x75,0x6E,0x20,0x61,0x6E,0x64,0x20,0x64,0x6F,0x20,0x61,0x77,0x65,0x73,0x6F,0x6D,0x65,0x20,0x74,0x68,0x69,0x6E,0x67,0x73,0x21,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

volatile uint64_t* key = (uint64_t*)((int)sequence + 48);
volatile uint64_t* nonce = (uint64_t*)((int)sequence + 56);
uint8_t hash[32];
volatile uint32_t hash_counter=0;

void countHash(){
        pc.printf("Counted %d hashes/s\n\r", hash_counter);
        hash_counter = 0;
}

void computeHash(){
        while(1) {
                SHA256::computeHash(hash, sequence, 64);
                if ((hash[0]==0) || (hash[1]==0)) {
                        *nonce+=1;
                        putMessage(NONCE_CODE, *nonce);
                }
                hash_counter+=1;
        }
}
